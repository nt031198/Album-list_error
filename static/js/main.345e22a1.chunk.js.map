{"version":3,"sources":["components/Navbar.js","components/AddAlbum.js","components/List.js","components/AlbumsList.js","components/UpdateAlbum.js","components/App.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","onClick","handleClick","react_router_dom","to","path","page","AddAlbum","Fragment","components_Navbar","id","type","userId","document","getElementById","value","title","addAlbumToList","Number","List","album","setUpdateAlbum","deleteAlbumFromList","AlbumsList","albums","map","components_List","key","UpdateAlbum","updateTitle","updateUserid","updateAlbumInList","_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","desc","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","then","unwrapped","error","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","App","_Component","_this","classCallCheck","possibleConstructorReturn","componentDidMount","asyncToGenerator","_callee","_context","fetch","response","json","setState","concat","newAlbums","filter","alert","_ref2","_callee2","_context2","updateAlbum","_x","apply","arguments","_ref3","_callee3","oldAlbum","index","updatedAlbum","_context3","indexOf","body","JSON","stringify","headers","Content-type","_x2","_x3","_x4","_x5","count","toConsumableArray","inherits","createClass","react_router","element","components_AlbumsList","components_AddAlbum","components_UpdateAlbum","Component","ReactDOM","createRoot","render","StrictMode","App_App"],"mappings":"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","file":"static/js/main.345e22a1.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom'\n\n//get button name and path for evaery component\nconst Navbar = (props) => {\n\n  return (\n    <div className='navbar'>\n      <h2 onClick={() => props.handleClick(false)}>\n        <span className='brand-first-half'>ALBUMS</span>\n        <span className='brand-last-half'>LIST</span>\n      </h2>\n      <Link to={props.path}><button>{props.page}</button></Link>\n    </div>\n  )\n}\n\nexport default Navbar\n","import React from 'react'\nimport { Link } from \"react-router-dom\";\nimport Navbar from './Navbar';\n\nconst AddAlbum = (props) => {\n\n  //this function get all the input like userid and title then call add albumm function for add it on the album list\n  const getAlbumFormData = () => {\n    const userId = document.getElementById('aaform-userid-inp').value;\n    const title = document.getElementById('aaform-title-inp').value;\n    props.addAlbumToList(Number(userId), title)\n  }\n\n  return (\n    <>\n      {/* navber */}\n      <Navbar path=\"/\" page=\"Home\" />\n\n\n      <div className='addalbum-container'>\n        <div className='addalbum-form'>\n          <h4>Enter New Album Details</h4>\n          <div className='inp-container'>\n            Enter User Id :\n            <input id='aaform-userid-inp' type=\"number\" />\n          </div>\n          <div className='inp-container'>\n            Enter Album Title :\n            <input id='aaform-title-inp' type=\"text\" />\n          </div>\n          <div>\n            <Link to=\"/\"><button onClick={getAlbumFormData}>Add To List</button></Link>\n          </div>\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default AddAlbum\n","import React from 'react'\nimport { Link } from \"react-router-dom\";\n\n//get album from album list and show using html css and js\nconst List = (props) => {\n  return (\n    <div className='list'>\n      <h3>{props.album.title}</h3>\n      <div className='button-group'>\n        <Link to=\"/update-album\"><button className=\"update-btn\" onClick={() => props.setUpdateAlbum(props.album)}>Update</button></Link>\n        <button className='delete-btn' onClick={() => props.deleteAlbumFromList(props.album.id)}>Delete</button>\n      </div>\n    </div>\n  )\n}\n\nexport default List\n","import React from 'react'\nimport List from './List'\nimport Navbar from './Navbar'\n\n//get all albums list from app and then call list component for each list on the albums\nconst AlbumsList = (props) => {\n  return (\n    <>\n      {/* Navbar */}\n      <Navbar page=\"Add Album\" path=\"/add-album\" />\n\n      <div className='albums-list'>\n        {props.albums.map((album) => <List album={album} key={album.id} setUpdateAlbum={props.setUpdateAlbum} deleteAlbumFromList={props.deleteAlbumFromList} />)}\n      </div>\n    </>\n  )\n}\n\nexport default AlbumsList\n","import React from 'react'\nimport { Link } from \"react-router-dom\";\nimport Navbar from './Navbar';\n\nconst UpdateAlbum = (props) => {\n  \n  const getUpdateData = () => {\n    const id = props.album.id;\n    let updateTitle = document.getElementById('title-inp').value;\n    let updateUserid = document.getElementById('userid-inp').value;\n\n    if (updateTitle === '') {\n      updateTitle = props.album.title;\n    }\n    if (updateUserid === '') {\n      updateUserid = props.album.userId;\n    }\n    props.updateAlbumInList(id, updateTitle, Number(updateUserid), props.album);\n  }\n\n  return (\n    <>\n      <Navbar path=\"/\" page=\"Home\" />\n      <div className='update-album'>\n        <div className='form-container'>\n          <h4>Title : {props.album.title}</h4>\n          <div className='inp-container'>\n            Enter New Title :\n            <input type=\"text\" id='title-inp'></input>\n          </div>\n\n          <h4>User Id : {props.album.userId}</h4>\n          <div className='inp-container'>\n            Enter New UserId :\n            <input type=\"number\" id='userid-inp'></input>\n          </div>\n\n          <Link to='/'><button type='submit' onClick={getUpdateData}>Save</button></Link>\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default UpdateAlbum;\n","import React, { Component } from 'react'\nimport { Routes, Route } from \"react-router-dom\";\nimport AddAlbum from './AddAlbum';\nimport AlbumsList from './AlbumsList';\n// import Navbar from './Navbar'\nimport UpdateAlbum from './UpdateAlbum';\n\nexport default class App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      albums: [],\n      updateAlbum: {}\n    }\n  }\n\n  // this function call first time when app render\n  componentDidMount = async () => {\n    const albums = await fetch('https://jsonplaceholder.typicode.com/albums')\n      .then((response) => response.json())\n      .then((json) => json);\n    this.setState({\n      albums\n    })\n  }\n\n  // setLastId=()=>{\n  //   const length=this.state.albums.length;\n  //   const lastId=this.state.albums[length-1].id;\n  //   this.setState({\n  //     lastId:lastId\n  //   })\n  //   console.log(this.state.lastId);\n  // }\n\n\n  //delete album function-----------------------------------------------------------------------------------\n  //this function take album id from albums list and then delete the album from albums list and update state\n  deleteAlbumFromList = (id) => {\n    fetch(`https://jsonplaceholder.typicode.com/albums/${id}`, { method: 'DELETE', })\n    const newAlbums = this.state.albums.filter((album) => album.id !== id);\n    alert(\"Your Album Deleted successfully\");\n    this.setState({\n      albums: newAlbums,\n    })\n  }\n  //---------------------------------------------------------------------------------------------------------\n\n\n  //update album functions------------------------------------------------------------------------------------\n  //this function take album object from albums list and set state for update album\n  setUpdateAlbum = async (album) => {\n    this.setState({\n      updateAlbum: album\n    })\n  }\n  //this function take album id, updateTitle, updateUserid, oldAlbum and then update and set state \n  updateAlbumInList = async (id, updateTitle, updateUserid, oldAlbum) => {\n    const albums = this.state.albums;\n    const index = albums.indexOf(oldAlbum);\n    let updatedAlbum = [];\n    if (id < 100) {\n      updatedAlbum = await fetch(`https://jsonplaceholder.typicode.com/albums/${id}`, {\n        method: 'PUT',\n        body: JSON.stringify({\n          userId: updateUserid,\n          id: id,\n          title: updateTitle,\n        }),\n        headers: {\n          'Content-type': 'application/json; charset=UTF-8',\n        },\n      }).then((response) => response.json()).then((json) => json);\n    } else {\n      updatedAlbum = {\n        userId: updateUserid,\n        id: id,\n        title: updateTitle\n      }\n    }\n    albums[index] = updatedAlbum;\n    this.setState({\n      albums: albums\n    })\n    alert(\"Update Successfully done\")\n  }\n  //--------------------------------------------------------------------------------------------------------\n\n  //add album function--------------------------------------------------------------------------------------\n  //this function take userid and title from input and then added to the bottom of the albums list\n  addAlbumToList = (userId, title) => {\n    fetch('https://jsonplaceholder.typicode.com/albums', {\n      method: 'POST',\n      body: JSON.stringify({\n        userId: userId,\n        id: this.state.count,\n        title: title,\n      }),\n      headers: {\n        'Content-type': 'application/json; charset=UTF-8',\n      },\n    }).then((response) => response.json()).then((json) => json);\n    const length = this.state.albums.length;\n    const lastId = this.state.albums[length - 1].id;\n    const album = {\n      userId: userId,\n      id: lastId + 1,\n      title: title,\n    }\n    this.setState({\n      albums: [...this.state.albums, album]\n    })\n    alert(\"New Album added successfully in the bottom\");\n  }\n  //--------------------------------------------------------------------------------------------------------\n\n\n  render() {\n    return (\n      <>\n        <Routes>\n          <Route path='/' element={<AlbumsList albums={this.state.albums} setUpdateAlbum={this.setUpdateAlbum} deleteAlbumFromList={this.deleteAlbumFromList} />}></Route>\n          <Route path='/add-album' element={<AddAlbum addAlbumToList={this.addAlbumToList} />}></Route>\n          <Route path='/update-album' element={<UpdateAlbum album={this.state.updateAlbum} updateAlbumInList={this.updateAlbumInList} />}></Route>\n        </Routes>\n      </>\n    )\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { BrowserRouter } from \"react-router-dom\";\nimport './index.css';\nimport App from './components/App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n<BrowserRouter>\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n</BrowserRouter>\n);"],"sourceRoot":""}